openapi: 3.0.0
info:
  description: Api Documentation
  version: "1.0"
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: cart-controller
    description: Cart Controller
  - name: db-controller
    description: Db Controller
paths:
  /dbFiller:
    get:
      tags:
        - db-controller
      summary: fillDatabase
      operationId: fillDatabaseUsingGET
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
  /invoices:
    get:
      tags:
        - cart-controller
      summary: getAllInvoices
      operationId: getAllInvoicesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/invoices/customer/{id}":
    get:
      tags:
        - cart-controller
      summary: getInvoicesByCustomerId
      operationId: getInvoicesByCustomerIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/invoices/{id}":
    get:
      tags:
        - cart-controller
      summary: getInvoiceById
      operationId: getInvoiceByIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Invoice"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/levelUp/customer/{id}":
    get:
      tags:
        - cart-controller
      summary: getLevelUpPointsByCustomerId
      operationId: getLevelUpPointsByCustomerIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  /order:
    post:
      tags:
        - cart-controller
      summary: createInvoiceViewModel
      operationId: createInvoiceViewModelUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        description: order
        required: true
      responses:
        "201":
          description: Created
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InvoiceViewModel"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  /products/inventory:
    get:
      tags:
        - cart-controller
      summary: getProductsInInventory
      operationId: getProductsInInventoryUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/products/invoice/{id}":
    get:
      tags:
        - cart-controller
      summary: getProductByInvoiceId
      operationId: getProductByInvoiceIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
  "/products/{id}":
    get:
      tags:
        - cart-controller
      summary: getProductById
      operationId: getProductByIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
servers:
  - url: //localhost:8181/
components:
  schemas:
    CustomerViewModel:
      type: object
      properties:
        address:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
      title: CustomerViewModel
    Invoice:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        purchaseDate:
          type: string
          format: date
      title: Invoice
    InvoiceItemViewModel:
      type: object
      properties:
        productDescription:
          type: string
        productName:
          type: string
        productPrice:
          type: number
        quantityToPurchase:
          type: integer
          format: int32
      title: InvoiceItemViewModel
    InvoiceViewModel:
      type: object
      properties:
        customer:
          $ref: "#/components/schemas/CustomerViewModel"
        items:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceItemViewModel"
        levelUp:
          $ref: "#/components/schemas/LevelUp"
        purchaseDate:
          type: string
          format: date
        total:
          type: number
          format: double
      title: InvoiceViewModel
    LevelUp:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        memberDate:
          type: string
          format: date
        points:
          type: integer
          format: int32
      title: LevelUp
    ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: "#/components/schemas/View"
        viewName:
          type: string
      title: ModelAndView
    Order:
      type: object
      properties:
        email:
          type: string
        productAndQuantity:
          type: object
          additionalProperties:
            type: integer
            format: int32
        purchaseDate:
          type: string
          format: date
      title: Order
    Product:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          format: int32
        inventory:
          type: integer
          format: int32
        listPrice:
          type: number
        name:
          type: string
        unitCost:
          type: number
      title: Product
    View:
      type: object
      properties:
        contentType:
          type: string
      title: View